---
import defaultArrow from "../assets/photos/arrow_white.png";

export interface Props {
  src?: string | { src: string; width?: number; height?: number };
  amp?: string;        // e.g. "8px"
  period?: string;     // e.g. "1.6s"
  scale?: number;      // e.g. 1.35
  bottom?: string;     // e.g. "32px"
  z?: number;          // e.g. 60
  width?: string;      // e.g. "64px"

  /** Hide after scrolling this many px (0 or undefined = never hide) */
  hideAtPx?: number;   // e.g. 500
  /** Width of the fade band around hideAtPx (in px) */
  fadeSpanPx?: number; // e.g. 160
  class?: string;
  ariaLabel?: string;
}

const {
  src = defaultArrow,
  amp = "8px",
  period = "1.6s",
  scale = 1,
  bottom = "24px",
  z = 50,
  width = "48px",
  hideAtPx = 0,
  fadeSpanPx = 160,
  class: className = "",
  ariaLabel = "Scroll down",
} = Astro.props;

const url = typeof src === "string" ? src : src.src;
const iW  = typeof src === "string" ? undefined : src.width;
const iH  = typeof src === "string" ? undefined : src.height;
---

<style>
  .scroll-arrow {
    position: absolute;
    left: 50%;
    bottom: var(--bottom, 24px);
    z-index: var(--z, 50);
    width: var(--w, 48px);
    height: auto;
    pointer-events: none;

    transform: translateX(-50%) translateY(0) scale(var(--scale, 1));
    animation: arrow-bounce var(--period, 1.6s) ease-in-out infinite;

    opacity: var(--alpha, 1);
    will-change: transform, opacity;
  }

  @keyframes arrow-bounce {
    0%, 100% { transform: translateX(-50%) translateY(0)                          scale(var(--scale, 1)); }
    25%      { transform: translateX(-50%) translateY(calc(var(--amp, 8px) * -1)) scale(var(--scale, 1)); }
    75%      { transform: translateX(-50%) translateY(var(--amp, 8px))            scale(var(--scale, 1)); }
  }

  @media (prefers-reduced-motion: reduce) {
    .scroll-arrow { animation: none; }
  }
</style>

<img
  src={url}
  alt={ariaLabel}
  width={iW}
  height={iH}
  class={`scroll-arrow ${className}`}
  style={`--amp:${amp}; --period:${period}; --scale:${scale}; --bottom:${bottom}; --z:${z}; --w:${width}; --alpha:1;`}
  data-hideat={String(hideAtPx || 0)}
  data-fadespan={String(fadeSpanPx)}
  loading="eager"
  decoding="sync"
/>

<script is:inline>
(function(){
  var el = document.currentScript && document.currentScript.previousElementSibling;
  if (!(el && el.tagName === 'IMG')) return;

  var hideAt = parseFloat(el.getAttribute('data-hideat') || '0') || 0;
  var span   = Math.max(1, parseFloat(el.getAttribute('data-fadespan') || '160'));
  if (!hideAt) return; // no hiding requested

  function smoothstep(a, b, x){
    var t = Math.max(0, Math.min(1, (x - a) / Math.max(1e-6, b - a)));
    return t*t*(3 - 2*t);
  }

  function update(){
    var y = window.scrollY || window.pageYOffset || 0;
    // Fade from fully visible -> fully hidden across a band centered on hideAt
    var start = hideAt - span * 0.5;
    var end   = hideAt + span * 0.5;
    var fade  = smoothstep(start, end, y); // 0..1
    var alpha = 1 - fade;
    el.style.setProperty('--alpha', String(alpha));
  }

  update();
  window.addEventListener('scroll', update, { passive:true });
  window.addEventListener('resize', update, { passive:true });
})();
</script>

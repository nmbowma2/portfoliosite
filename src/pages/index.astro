---
import Base from "../layouts/Base.astro";
import TopoDots from "../components/TopoDots.astro";
import FiveImageSequencer from "../components/FiveImageSequencer.astro";
import BottomArrow from "../components/BottomArrow.astro";
import ScrollSpacer from "../components/ScrollSpacer.astro";
import HoldEnterButton from "../components/HoldEnterButton.astro";
import ChoiceCarousel from "../components/ChoiceCarousel.astro";

import img1 from "../assets/photos/font_1.png";
import img4 from "../assets/photos/font_2.png";
import img5 from "../assets/photos/font_3.png";
import img2 from "../assets/photos/font_4.png";
import img3 from "../assets/photos/font_5.png";
import overlay2 from "../assets/photos/tvoff_1.gif";
import rightIcon from "../assets/photos/lock.png";
import c1 from "../assets/photos/videos.png"
import c2 from "../assets/photos/music.png"
import c3 from "../assets/photos/photos.png"
import bigarrow from "../assets/photos/arrow_black.png"
import cf1 from "../assets/photos/carouselfont1.png"
import cf2 from "../assets/photos/carouselfont2.png"
import cf3 from "../assets/photos/carouselfont3.png"

const withBase = (p: string) => import.meta.env.BASE_URL + p.replace(/^\//, '');

/* carousel items */
const items = [
  { src: c1.src, href: withBase("videos/"), label: "videos" },
  { src: c3.src, href: withBase("fotos/"),  label: "fotos"  },
  { src: c2.src, href: withBase("music/"), label: "music" },
];
const items2 = [
  { src: cf1.src, href: withBase("videos/"), label: "videos"},
  { src: cf3.src, href: withBase("fotos/"), label: "fotos"},
  { src: cf2.src, href: withBase("music/"), label: "music"},
];
const sources = [img1, img2, img3, img4, img5];
const seqConfig = [
  { x: 0, y: 0, baseScale: 2.5 },
  { x: 0, y: 0, baseScale: 2.5 },
  { x: 0, y: 0, baseScale: 2.5 },
  { x: 0, y: 0, baseScale: 2.5 },
  { x: 0, y: 0, baseScale: 2.5 },
];
const BASE = import.meta.env.BASE_URL;

---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{Astro.props.title}</title>
  <meta name="description" content={Astro.props.description} />
  <!-- other head tags -->
  <link rel="icon" href={`${BASE}web.png`} type="image/png" sizes="any" />
  <link rel="preload" as="image" href= "/src/assets/photos/arrow_black.png">

</head>

<!-- Place this near the top of index.astro -->
<Base title="portfoliov1" description="projects">
  <section class="relative h-[130vh] px-4 md:px-8 lg:px-12 py-12">
    <TopoDots
      spacing={24.5}
      amp={14}
      sigma={120}
      falloff="exp"
      chromaEnabled={true}
      chromaMode="lighter"
      rOffsetX={1.2} rOffsetY={0}
      gOffsetX={-2.5} gOffsetY={1.0}
      bOffsetX={-1.5} bOffsetY={0}
      targetFPS={60}
      dprCap={2}
      maxDots={9000}
      ariaHidden={true}
      chromaStrength={15.0}
    />

    <BottomArrow
      amp="10px"
      period="1.4s"
      scale={2.75}
      bottom="3.5%"
      z={60}
      width="64px"
      hideAtPx="90%"    
      fadeSpanPx={180}  
    />
  </section>
    <div class="fixed inset-0 z-50 flex items-center justify-center pointer-events-none">
    <div class="w-[80vw] max-w-[600px] aspect-[4/3]">
      <FiveImageSequencer
        sources={sources}
        fps={24}
        config={seqConfig}
        class="w-full h-full"
        fadeEnabled={true}
        fadeScrollVh={30} 
        fadeMode="out"
        minOpacity={0}
        maxOpacity={1}
      />
    </div>
  </div>  
</Base>


<ScrollSpacer size="60vh" />

<!-- TV Section with responsive scaling -->
<!-- TV Section with responsive scaling -->
<section id="enter-stage" class="tv-section">
  <div class="tv-container">
    <!-- TV Overlay Background -->
    <img
      src={overlay2.src}
      alt="TV Frame"
      class="tv-overlay"
    />

    <!-- TV Screen Content Area -->
    <div class="tv-screen">

      <ChoiceCarousel
        
        class="carousel-content"
        targetSelector="#enter-stage"
        items={items}
        items2={items2}
        leftArrow={bigarrow}
        rightArrow={bigarrow}

        top="0" left="0" right="0" bottom="0"
        centerX={false} centerY={false} offsetX="0" offsetY="0"

        mode="fill"
        frameMaxWidth="100%"
        frameRadius={12}
        imageFit="contain"
        imageScale={1}
        navigateOnClick={false}

        verticalOffset="-2.5%"         
        secondaryImageOffset="-100%"    
        secondaryImageWidth="200%"        
        secondaryImageHeight="180%"                  
             
      />
    </div>
  </div>

  <!-- Enter Button -->
  <HoldEnterButton
    durationMs={3000}
    targetSelector="#enter-stage"
    label="ENTER"
    strokeRadius={10}
    hideOnComplete={true}
    icon={rightIcon}
    strokeStart="bottom-center"
  />
</section>
<ScrollSpacer size="15vh" />


<style is:global>
  .tv-section {
    position: relative;
    height: 60vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
  }

  .tv-container {
    position: relative;
    width: min(80vw, 600px);
    aspect-ratio: 4/3;
    transform-origin: center;
  }

  .tv-overlay {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: fill;
    pointer-events: none;
    z-index: 0;
  }

  .tv-screen {
    position: absolute;
    left: 34.5%;
    top: 21%;
    width: 30%;
    height: 40%;
    z-index: 1;
    --scale: 1;
  }

  .carousel-content {
    position: relative;
    display: grid;
    place-items: center;
    height: 100%;
    width: 100%;
  }

  .carousel-design-canvas {
    position: absolute;
    width: 1200px;  /* your desktop design width */
    height: 900px;  /* your desktop design height */
    transform-origin: top left;
  }
  
  /* Responsive scaling for smaller screens */
  @media (max-width: 768px) {
    .tv-section {
      height: 50vh;
      padding: 0.5rem;
    }
    
    .tv-container {
      width: min(95vw, 500px);
    }
  }

  @media (max-width: 480px) {
    .tv-section {
      height: 45vh;
    }
    
    .tv-container {
      width: min(100vw, 400px);
    }
  }

  /* Ensure the TV maintains proportions on very wide screens */
  @media (min-width: 1200px) {
    .tv-container {
      width: min(60vw, 800px);
    }
  }
</style>